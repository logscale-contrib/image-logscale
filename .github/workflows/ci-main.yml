#
name: Main CI
#
on:
  push:
    branches:
      - "main"
      - "next"
      - "next-major"
  pull_request:
    branches:
      - "main"
      - "next"
      - "next-major"
jobs:
  # meta:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     dockerhub-publish: ${{ steps.dockerhub-publish.outputs.defined }}
  #     registry: ghcr.io/${{ github.repository }}/container:${{ fromJSON(steps.docker_action_meta.outputs.json).labels['org.opencontainers.image.version'] }}
  #     container_tags: ${{ steps.docker_action_meta.outputs.tags }}
  #     container_labels: ${{ steps.docker_action_meta.outputs.labels }}
  #     container_buildtime: ${{ fromJSON(steps.docker_action_meta.outputs.json).labels['org.opencontainers.image.created'] }}
  #     container_version: ${{ fromJSON(steps.docker_action_meta.outputs.json).labels['org.opencontainers.image.version'] }}
  #     container_revision: ${{ fromJSON(steps.docker_action_meta.outputs.json).labels['org.opencontainers.image.revision'] }}
  #     container_base: ${{ fromJSON(steps.docker_action_meta.outputs.json).tags[0] }}
  #     new_release_version: ${{ steps.version.outputs.new_release_version }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         submodules: false
  #         persist-credentials: false
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: "18"

  Containerize:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lsversion:
          - 1.63.1
          - 1.63.2
          - 1.63.3
          - 1.67.0
    steps:
      #Yes we need code
      - uses: actions/checkout@v3
        with:
          submodules: false
          persist-credentials: false
      # These steps are quick and will work or if fail only because of external issues
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2.1.0
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Semantic Release
        id: version
        uses: cycjimmy/semantic-release-action@v3.2.0
        with:
          semantic_version: 19
          extra_plugins: |
            @semantic-release/exec
            @semantic-release/git
            @google/semantic-release-replace-plugin
            conventional-changelog-conventionalcommits
          dry_run: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REGISTRY_USERNAME: ${{ github.repository_owner }}
          REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-node@v3
        with:
          node-version: "18"

      - name: Docker meta
        id: docker_action_meta
        uses: docker/metadata-action@v4.3.0
        with:
          images: ghcr.io/${{ github.repository }}/container
          flavor: |
            latest=false
          tags: |
            type=sha,format=long
            type=sha
            type=semver,pattern={{version}},value=${{ steps.version.outputs.new_release_version }},prefix=${{ matrix.lsversion }}-
            type=ref,event=branch,prefix=${{ matrix.lsversion }}-
            type=ref,event=pr,prefix=${{ matrix.lsversion }}-
            type=ref,event=tag,prefix=${{ matrix.lsversion }}-
          labels: |
            org.opencontainers.image.licenses=Apache-2.0

      #Generate Meta
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' && steps.version.outputs.new_release_published }} 
          tags: ${{ steps.docker_action_meta.outputs.tags }}
          labels: ${{ steps.docker_action_meta.outputs.labels }}
          build-args: |
            BUILDTIME=${{ fromJSON(steps.docker_action_meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.docker_action_meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.docker_action_meta.outputs.json).labels['org.opencontainers.image.revision'] }}
            logscale_version=${{ matrix.lsversion }}
          cache-from: type=registry,ref=${{ fromJSON(steps.docker_action_meta.outputs.json).tags[0] }}
          cache-to: type=inline

      - name: Semantic Release
        if: github.event_name != 'pull_request'
        id: release_version
        uses: cycjimmy/semantic-release-action@v3.2.0
        with:
          semantic_version: 19
          extra_plugins: |
            @semantic-release/exec
            @semantic-release/git
            conventional-changelog-conventionalcommits
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REGISTRY_USERNAME: ${{ github.repository_owner }}
          REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
